homeassistant:
  # Name of the location where Home Assistant is running
  name: Home 
  # Location required to calculate the time the sun rises and sets
  latitude: 45.503147
  longitude: 12.306890
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 0
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Rome
  # Customization file
  customize: !include customize.yaml
  packages: !include_dir_named packages
  auth_providers:
  - type: homeassistant

system_health:

# Show links to resources in log and frontend
# introduction:

# Enables the frontend
frontend:

# Enables configuration UI
config:

person:

http:
  #base_url: smatteo.dlinkddns.com:8123
  base_url: https://smatteo.dlinkddns.com
  ip_ban_enabled: false
  #api_password: !secret http_password

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
# http:
#   base_url: smatteo.dlinkddns.com:8123

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time
history:
  exclude:
    entities:
      - input_number.alarm_weekdays_minutes
      - input_number.alarm_weekdays_hours
      - input_number.alarm_weekend_minutes
      - input_number.alarm_weekend_hours

# View all events in a logbook
logbook:

# Enables a map showing the location of tracked devices
map:

# Track the sun
sun:

# Sensors
sensor:
  # Weather prediction
  - platform: yr
  #  
  - platform: mqtt
    name: "Umidità corridoio"
    unit_of_measurement: '%'
    state_topic: "/RfGateway/clima/Humidity"
  #    
  - platform: mqtt
    name: "Temperatura corridoio"
    unit_of_measurement: '°C'
    state_topic: "/RfGateway/clima/Temperature"
  #
  - platform: mqtt
    name: "Consumi accumulati"
    unit_of_measurement: 'Wh'
    state_topic: "/Contatore Enel/ImpulsoWatt/Total"
  #  
  - platform: mqtt
    name: "Consumi istantanei"
    unit_of_measurement: 'Wh'
    state_topic: "/Contatore Enel/ImpulsoWatt/Count"
  #
  - platform: mqtt
    name: "Temperatura sala"
    unit_of_measurement: '°C'
    state_topic: "/sala/clima/Temperature"
  #    
  - platform: mqtt
    name: "Umidità sala"
    unit_of_measurement: '%'
    state_topic: "/sala/clima/Humidity"
  #
  - platform: mqtt
    name: "Aurora Inverter"
    unit_of_measurement: 'Watt'
    state_topic: "/Inverter/Aurora/DailyEnergy"
  #    
  - platform: rest
    resource: http://192.168.1.106/json?view=sensorupdate
    name: "DailyEnergy"
    unit_of_measurement: 'Watt'
    value_template: '{{ value_json.Sensors[0].TaskValues[0].Value }}' # Sensors[X] is the sensor index as seen in the frontend page
    scan_interval: 60 # Not sure if this is supported by the RESTful sensor, but putting it there anyways
    
  #
  - platform: qnap
    host: 192.168.1.108
    port: 8888  # Optional; default is 8080
    ssl: false # Optional; default is false
    username: admin
    password: admin
    drives: # Optional; all drives will be monitored by default
      - 0:1
      - 0:2
    nics: # Optional; all NICs will be monitored by default
      - eth1
    volumes: # Optional; all volumes will be monitored by default
      - DataVol1
    monitored_conditions:
      - status
      - cpu_temp
      - cpu_usage
      - memory_free
      - memory_used
      - memory_percent_used
      - network_link_status
      - drive_smart_status
      - drive_temp
      - volume_size_used
      - volume_size_free
      - volume_percentage_used
      - network_tx
      - network_rx
      

# Text to speech
tts:
  - platform: google_translate
    service_name: google_say
    base_url: http://192.168.1.108:8123
    cache: true
    cache_dir: /tmp/tts
    time_memory: 300
    language: 'it'

# Cloud
# cloud:

group: !include groups.yaml
# automation: !include automations.yaml
script: !include scripts.yaml

mqtt:
  discovery: true
  broker: 192.168.1.108

# Enable the auth component
auth:

owntracks:
  max_gps_accuracy: 200
  waypoints: true
  mqtt_topic: "owntracks/#"
  events_only: true

device_tracker:
  - platform: nmap_tracker
    hosts: 192.168.1.0/24
    interval_seconds: 120
    exclude:
      - 192.168.1.108

ifttt:
  key: bD_VR-uKNWKOscG78Eq1y1

input_boolean:
  lucesala:
    name: Notify luce sala
    initial: off
    icon: mdi:lightbulb-outline

switch:
  - platform: template
    switches:
      luce_sala:
        friendly_name: Luce sala
        value_template: '{{ states.input_boolean.lucesala.state }}'
        turn_on:
          - service: ifttt.trigger
            data_template: {"event":"luce_accesa"}
          - service: homeassistant.turn_on
            entity_id: input_boolean.lucesala
        turn_off:
            - service: ifttt.trigger
              data_template: {"event":"luce_spenta"}
            - service: homeassistant.turn_off
              entity_id: input_boolean.lucesala
        icon_template: >-
          {% if  states.input_boolean.lucesala.state  %}
            mdi:lamp
          {% else %}
            mdi:radio
          {% endif %}

  - platform: command_line
    switches:
      tap_canc:    
         friendly_name: Cancello esterno
         command_on: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,canc"
         command_off: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,canc"
         value_template: '{{ value == "1" }}'

panel_iframe:
  configurator:
    title: Configurator
    icon: mdi:wrench
    url: http://192.168.1.108:3218
    
camera:    
  - platform: generic 
    name: Sala Webcam
    still_image_url: http://192.168.1.108:8888/apps/QUSBCam2/share.cgi?ssid=92030171
    scan_interval: 60
  - platform: foscam
    ip: 192.168.1.121
    username: admin
    password: admin    
    
stream:    
    
google_assistant:
  project_id: homea-fec1b
  api_key: !secret googleAPI
  exposed_domains:
    - switch
    - light
    - cover

media_extractor:
  default_query: worst
  customize:
    media_player.chromecast:
      video: bestvideo
      music: bestaudio[ext=mp3]

shell_command:
  log: /bin/bash -c "[ -d /config/log/$(date +%Y-%m) ] || mkdir /config/log/$(date +%Y-%m); echo '{{ now().strftime("%Y-%m-%d %H:%M:%S") }} {{text}}' >> /config/log/$(date +%Y-%m)/day-$(date +%d).log"
  open_blind_all: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,up0"
  close_blind_all: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,do0"
  stop_blind_all: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,st0"
  open_blind_bimbe: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,up1"
  close_blind_bimbe: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,do1"
  stop_blind_bimbe: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,st1"
  open_blind_nonna: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,up2"
  close_blind_nonna: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,do2"
  stop_blind_nonna: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,st2"
  open_blind_bagno: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,up3"
  close_blind_bagno: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,do3"
  stop_blind_bagno: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,st3"
  open_blind_cam: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,up4"
  close_blind_cam: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,do4"
  stop_blind_cam: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,st4"
  open_blind_bagno_pic: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,up5"
  close_blind_bagno_pic: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,do5"
  stop_blind_bagno_pic: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,st5"
  open_blind_sala_pic: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,up6"
  close_blind_sala_pic: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,do6"
  stop_blind_sala_pic: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,st6"
  open_blind_sala: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,up7"
  close_blind_sala: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,do7"
  stop_blind_sala: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,st7"
  open_blind_rip: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,up8"
  close_blind_rip: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,do8"
  stop_blind_rip: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,st8"
  open_blind_cuc: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,up9"
  close_blind_cuc: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,do9"
  stop_blind_cuc: "/usr/bin/curl -X GET http://192.168.1.119/control?cmd=RFSEND,st9"


cover:
  - platform: template
    covers:
      blind_all:
        friendly_name: "Tapparelle"
      #  value_template: "{{ states('sensor.blind_salapic')|float > 0 }}"
        position_template: 50
        open_cover:
          service: shell_command.open_blind_all
        close_cover:
          service: shell_command.close_blind_all
        stop_cover:
          service: shell_command.stop_blind_all
      blind_bimbe:
        friendly_name: "Tapparella camera bimbe"
      #  value_template: "{{ states('sensor.blind_salapic')|float > 0 }}"
        position_template: 50
        open_cover:
          service: shell_command.open_blind_bimbe
        close_cover:
          service: shell_command.close_blind_bimbe
        stop_cover:
          service: shell_command.stop_blind_bimbe
      blind_nonna:
        friendly_name: "Tapparella camera nonna"
      #  value_template: "{{ states('sensor.blind_salapic')|float > 0 }}"
        position_template: 50
        open_cover:
          service: shell_command.open_blind_nonna
        close_cover:
          service: shell_command.close_blind_nonna
        stop_cover:
          service: shell_command.stop_blind_nonna
      blind_bagno:
        friendly_name: "Tapparella bagno grande"
      #  value_template: "{{ states('sensor.blind_salapic')|float > 0 }}"
        position_template: 50
        open_cover:
          service: shell_command.open_blind_bagno
        close_cover:
          service: shell_command.close_blind_bagno
        stop_cover:
          service: shell_command.stop_blind_bagno
      blind_cam:
        friendly_name: "Tapparella camera genitori"
      #  value_template: "{{ states('sensor.blind_salapic')|float > 0 }}"
        position_template: 50
        open_cover:
          service: shell_command.open_blind_cam
        close_cover:
          service: shell_command.close_blind_cam
        stop_cover:
          service: shell_command.stop_blind_cam
      blind_bagno_pic:
        friendly_name: "Tapparella bagno piccolo"
      #  value_template: "{{ states('sensor.blind_salapic')|float > 0 }}"
        position_template: 50
        open_cover:
          service: shell_command.open_blind_bagno_pic
        close_cover:
          service: shell_command.close_blind_bagno_pic
        stop_cover:
          service: shell_command.stop_blind_bagno_pic
      blind_sala_pic:
        friendly_name: "Tapparella piccola sala"
      #  value_template: "{{ states('sensor.blind_salapic')|float > 0 }}"
        position_template: 50
        open_cover:
          service: shell_command.open_blind_sala_pic
        close_cover:
          service: shell_command.close_blind_sala_pic
        stop_cover:
          service: shell_command.stop_blind_sala_pic
      blind_sala:
        friendly_name: "Tapparella grande sala"
      #  value_template: "{{ states('sensor.blind_salapic')|float > 0 }}"
        position_template: 50
        open_cover:
          service: shell_command.open_blind_sala
        close_cover:
          service: shell_command.close_blind_sala
        stop_cover:
          service: shell_command.stop_blind_sala
      blind_rip:
        friendly_name: "Tapparella ripostiglio"
      #  value_template: "{{ states('sensor.blind_salapic')|float > 0 }}"
        position_template: 50
        open_cover:
          service: shell_command.open_blind_rip
        close_cover:
          service: shell_command.close_blind_rip
        stop_cover:
          service: shell_command.stop_blind_rip
      blind_cuc:
        friendly_name: "Tapparella cucina"
      #  value_template: "{{ states('sensor.blind_salapic')|float > 0 }}"
        position_template: 50
        open_cover:
          service: shell_command.open_blind_cuc
        close_cover:
          service: shell_command.close_blind_cuc
        stop_cover:
          service: shell_command.stop_blind_cuc
        

logger:
  default: info
  #   default: debug
  #logs:
    # homeassistant.components.http: debug
    # homeassistant.components.websocket_api: debug
    
